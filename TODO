 - implement port infra
 - memory mapped infra
 - prism BIOS
    - set internal interrupts
    - main app writes indexes of storages in main mem, BIOS reads them
    - set correct modes to peripheral
    - find bootable media
    - start bootloader
    - initial CPU test
    - test timers/video/keyboard
 - peripheral
    - video
    - keyboard
    - flopy
    - HDD
    - PIC
    - PIT

-------------------------------------------------------

 - variable size of memIO page
 - support b and 16b reads/writes
 - should support local operations(not comm with remote thread)
 - could be merged with ports later
 - should be fast when working with mem only (short path for non-IO accesses)
 - page of 256 bytes should cover most memory mapped regions

PrismPeripheral
 - infra for peripherals
 - map port/offset to specific handler
 - communicate via IOQueue
 - send interrupts
 - check if thread can wait on queue
