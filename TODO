 - implement port infra
 - memory mapped infra
 - prism BIOS
    - set internal interrupts
    - main app writes indexes of medias in main mem, BIOS reads them
    - set correct modes to peripheral
    - find bootable media
    - start bootloader
    - initial CPU test
    - test timers/video/keyboard
 - peripheral
    - video
    - keyboard
    - flopy
    - HDD
    - PIC
    - PIT

-------------------------------------------------------
Ports

readPort16 :: MonadIO m => PortHandlers -> Uint16 -> m Uint16
readPort16 handlers port = 
    func <- handlers ! port
    func port
